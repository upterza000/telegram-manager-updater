{
  "name": "Video Processing to Telegram",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "/webhook/video-trigger",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/search-videos",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "folderId",
              "value": "={{$node[\"Webhook Trigger\"].json[\"query\"][\"folderId\"] || $env[\"GOOGLE_DRIVE_FOLDER_ID\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "search-videos",
      "name": "Search Videos in Drive",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.success}}",
              "operation": "equal",
              "value2": "true"
            }
          ]
        }
      },
      "id": "check-search-success",
      "name": "Check Search Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "videos",
        "options": {}
      },
      "id": "split-videos",
      "name": "Split Videos",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        900,
        220
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:3000/process-video",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"fileId\": \"{{$json.id}}\",\n  \"caption\": \"üìπ <b>{{$json.name}}</b>\\n\\nüîÑ Processed automatically from Google Drive\\nüìä Size: {{$json.sizeFormatted}}\\n‚è∞ Modified: {{$json.modifiedTime}}\\n\\n#video #automated\",\n  \"buttons\": [\n    [\n      {\"text\": \"üëç Like\", \"callback_data\": \"like_{{$json.id}}\"},\n      {\"text\": \"üëé Dislike\", \"callback_data\": \"dislike_{{$json.id}}\"}\n    ],\n    [\n      {\"text\": \"üì§ Share\", \"callback_data\": \"share_{{$json.id}}\"},\n      {\"text\": \"üóëÔ∏è Delete\", \"callback_data\": \"delete_{{$json.id}}\"}\n    ]\n  ]\n}",
        "options": {
          "timeout": 300000
        }
      },
      "id": "process-video",
      "name": "Process & Send Video",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1120,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.success}}",
              "operation": "equal",
              "value2": "true"
            }
          ]
        }
      },
      "id": "check-process-success",
      "name": "Check Process Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1340,
        220
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll"
      },
      "id": "merge-results",
      "name": "Merge Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        1560,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Workflow completed\",\n  \"processedVideos\": {{$json.length}},\n  \"timestamp\": \"{{new Date().toISOString()}}\"\n}"
      },
      "id": "response-success",
      "name": "Response Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1780,
        220
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"error\": \"Search failed\",\n  \"message\": \"{{$json.error || 'Unknown error'}}\",\n  \"timestamp\": \"{{new Date().toISOString()}}\"\n}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "response-error",
      "name": "Response Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        900,
        380
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"error\": \"Processing failed\",\n  \"video\": \"{{$json.name}}\",\n  \"message\": \"{{$json.error || 'Unknown processing error'}}\",\n  \"timestamp\": \"{{new Date().toISOString()}}\"\n}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "response-process-error",
      "name": "Response Process Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1560,
        380
      ]
    },
    {
      "parameters": {
        "operation": "executeCommand",
        "command": "echo",
        "additionalFields": {
          "arguments": "Video processing completed successfully for: {{$json.name}}"
        }
      },
      "id": "log-success",
      "name": "Log Success",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1560,
        140
      ]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Search Videos in Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Videos in Drive": {
      "main": [
        [
          {
            "node": "Check Search Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Search Success": {
      "main": [
        [
          {
            "node": "Split Videos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Videos": {
      "main": [
        [
          {
            "node": "Process & Send Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process & Send Video": {
      "main": [
        [
          {
            "node": "Check Process Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Process Success": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response Process Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Success": {
      "main": [
        [
          {
            "node": "Response Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Results": {
      "main": [
        [
          {
            "node": "Response Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1.0.0",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "video-processing-workflow",
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "1",
      "name": "video-processing"
    }
  ]
}